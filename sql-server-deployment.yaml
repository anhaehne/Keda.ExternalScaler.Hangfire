#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: Service
metadata:
  name: sqlserver
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: 'true'
spec:
  type: LoadBalancer
  loadBalancerIP: #@ data.values.sql_server_loadbalancer_ip
  selector:
    app: sqlserver
  ports:
    - protocol: TCP
      port: 1433
      name: sqlserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver
spec:
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      labels:
        app: sqlserver
    spec:
      containers:
      - name: sqlserver
        image: mcr.microsoft.com/mssql/server:2019-CU5-ubuntu-18.04
        ports:
        - containerPort: 1433
          protocol: TCP
        env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: SA_PASSWORD
            value: "Password@1"
        volumeMounts:
        - name: mssql-system-persistent-storage
          mountPath: /var/opt/mssql
      volumes:
        - name: mssql-system-persistent-storage
          persistentVolumeClaim:
            claimName: mssql-system-pv-claim
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mssql-system
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  hostPath:
    path: "mssql-system"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mssql-system-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
